# Generated by Django 3.0.4 on 2020-03-29 19:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Angler',
            fields=[
                ('ang_id', models.AutoField(db_column='ANG_ID', primary_key=True, serialize=False)),
                ('ang_fname', models.CharField(db_column='ANG_FNAME', max_length=45)),
                ('ang_lname', models.CharField(db_column='ANG_LNAME', max_length=45)),
                ('ang_dob', models.DateField(db_column='ANG_DOB')),
            ],
            options={
                'db_table': 'angler',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('date_posted', models.DateTimeField()),
            ],
            options={
                'db_table': 'blog_post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fish',
            fields=[
                ('fish_id', models.AutoField(db_column='FISH_ID', primary_key=True, serialize=False)),
                ('fish_type', models.CharField(db_column='FISH_TYPE', max_length=45)),
                ('fish_avg_len', models.DecimalField(blank=True, db_column='FISH_AVG_LEN', decimal_places=0, max_digits=10, null=True)),
                ('fish_avg_wgt', models.DecimalField(blank=True, db_column='FISH_AVG_WGT', decimal_places=0, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'fish',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('loc_id', models.AutoField(db_column='LOC_ID', primary_key=True, serialize=False)),
                ('loc_state', models.CharField(db_column='LOC_STATE', max_length=2)),
                ('loc_county', models.CharField(db_column='LOC_COUNTY', max_length=40)),
                ('loc_lake', models.CharField(db_column='LOC_LAKE', max_length=40)),
            ],
            options={
                'db_table': 'location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Official',
            fields=[
                ('ofc_id', models.AutoField(db_column='OFC_ID', primary_key=True, serialize=False)),
                ('ofc_fname', models.CharField(db_column='OFC_FNAME', max_length=45)),
                ('ofc_lname', models.CharField(db_column='OFC_LNAME', max_length=45)),
            ],
            options={
                'db_table': 'official',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('spons_id', models.AutoField(db_column='SPONS_ID', primary_key=True, serialize=False)),
                ('spons_name', models.CharField(db_column='SPONS_NAME', max_length=45)),
                ('spons_tier', models.IntegerField(blank=True, db_column='SPONS_TIER', null=True)),
            ],
            options={
                'db_table': 'sponsor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.AutoField(db_column='TEAM_ID', primary_key=True, serialize=False)),
                ('team_name', models.CharField(db_column='TEAM_NAME', max_length=45)),
                ('team_owner', models.CharField(blank=True, db_column='TEAM_OWNER', max_length=45, null=True)),
            ],
            options={
                'db_table': 'team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('trn_id', models.AutoField(db_column='TRN_ID', primary_key=True, serialize=False)),
                ('Tournament_Name', models.CharField(db_column='TRN_NAME', max_length=45)),
                ('Tournament_Date', models.DateField(blank=True, db_column='TRN_DATE', null=True)),
                ('Tournament_Entry_Fee', models.DecimalField(blank=True, db_column='TRN_ENTRY_FEE', decimal_places=2, max_digits=9, null=True)),
                ('Tournament_First_Prize', models.DecimalField(blank=True, db_column='TRN_FIRST_PRIZE', decimal_places=2, max_digits=9, null=True)),
                ('Tournament_Second_Prize', models.DecimalField(blank=True, db_column='TRN_SECOND_PRIZE', decimal_places=2, max_digits=9, null=True)),
                ('Tournament_Third_Prize', models.DecimalField(blank=True, db_column='TRN_THIRD_PRIZE', decimal_places=2, max_digits=9, null=True)),
            ],
            options={
                'db_table': 'tournament',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'users_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CaughtFish',
            fields=[
                ('trn', models.OneToOneField(db_column='TRN_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='tournament.Tournament')),
                ('c_date', models.DateTimeField(db_column='C_DATE')),
                ('c_fish_len', models.DecimalField(db_column='C_FISH_LEN', decimal_places=0, max_digits=10)),
                ('c_fish_wgt', models.DecimalField(db_column='C_FISH_WGT', decimal_places=0, max_digits=10)),
            ],
            options={
                'db_table': 'caught_fish',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegisteredTeam',
            fields=[
                ('trn', models.OneToOneField(db_column='TRN_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='tournament.Tournament')),
                ('reg_date', models.DateTimeField(blank=True, db_column='REG_DATE', null=True)),
                ('reg_paid_status', models.CharField(db_column='REG_PAID_STATUS', max_length=1)),
            ],
            options={
                'db_table': 'registered_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TournamentRule',
            fields=[
                ('trn', models.OneToOneField(db_column='TRN_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='tournament.Tournament')),
                ('min_fish_len', models.DecimalField(blank=True, db_column='MIN_FISH_LEN', decimal_places=0, max_digits=10, null=True)),
                ('min_fish_weight', models.DecimalField(blank=True, db_column='MIN_FISH_WEIGHT', decimal_places=0, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'tournament_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrnOfficial',
            fields=[
                ('trn', models.OneToOneField(db_column='TRN_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='tournament.Tournament')),
                ('trn_official_uname', models.CharField(db_column='TRN_OFFICIAL_UNAME', max_length=45)),
                ('trn_official_pword', models.CharField(db_column='TRN_OFFICIAL_PWORD', max_length=45)),
            ],
            options={
                'db_table': 'trn_official',
                'managed': False,
            },
        ),
    ]
